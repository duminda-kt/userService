# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: userservice
# app and org for use with dashboard.serverless.com
app: userservice-app
org: dsubs2019

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs10.x

# you can overwrite defaults here
  stage: dev
  region: ap-southeast-2

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:ap-southeast-2:*:*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  create:
    handler: handler.create
    events:
      - http:
          path: users
          method: post
          cors: true
  readAll:
    handler: handler.readAll
    events:
      - http:
          path: users
          method: get
          cors: true
  readOne:
    handler: handler.readOne
    events:
      - http:
          path: users/{id}
          method: get
          cors: true
  update:
    handler: handler.update
    events:
      - http:
          path: users/{id}
          method: put
          cors: true
  delete:
    handler: handler.delete
    events:
      - http:
          path: users/{id}
          method: delete
          cors: true

# you can add CloudFormation resource templates here
resources:
 Resources:
    UsersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: 'users' 
